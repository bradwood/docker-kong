#API CONFIGURATION

# Note all the SECURE_* variables are associated to each other by ordinality (1st, 2nd, 3rd, etc)
# - a poor man's hash/struct data type.

#API names for various APIs set up in Kong. These will be secured via the OAUTH2 RESOURCE OWNER GRANT mechanism
#and form part of the URLs used to manage the APIs on the Kong admin port (8001)
SECURE_API_NAMES=('consumer-v1' 'merchant-v1' 'm-manager-v1' 'admin-v1' 'consumer-v2')
# Upstream URLs for each API -- all point to the same wiremock service root directory
SECURE_API_UPSTREAM_URLS=('http://wiremock:8080/' 'http://wiremock:8080/' 'http://wiremock:8080/' 'http://wiremock:8080/' 'http://wiremock:8080/')
# Request paths for each API - the public path exposed by Kong
SECURE_API_REQUEST_PATHS=('/consumer/v1' '/merchant/v1' '/m-manager/v1' '/admin/v1' '/consumer/v2')
#if set to true, the abovementioned request path with be stripped before the request is proxied
SECURE_STRIP_REQUEST_PATH=false
# ACLs for API access are based on white- or black-list groups. We will use white-lists
# The following group names will be set up, each againsts its associated API.
# A consumer must belong to any of the associated groups in order to call the associated API.
#
# Memebers of the admin  groupare permissioned to call *any* API
# whitelists are version agnostic.
SECURE_API_WHITELIST_GROUPS=( 'consumer_group,admin_group' \
							  'merchant_group,admin_group' \
							  'm-manager_group,admin_group' \
							  'admin_group' \
							  'consumer_group,admin_group')

# scopes are version agnostic.
SECURE_API_SCOPES=('consumer' 'merchant' 'm-manager' 'admin') # note the consumer scope will work for v1 and v2

# API used to authenticate and authorise a user. Will issue an OAUTH token and also managed OAUTH token re-issues.
# This API is itself not secured by Kong, as it needs to proxy unauthenticated requests to authenticate to the
# authentication service.
AUTHENTICATE_API_NAME=authenticate-v1
AUTHENTICATE_API_UPSTREAM_URL=https://wiremock:8081/
AUTHENTICATE_API_REQUEST_PATH=/authenticate/v1
AUTHENTICATE_API_STRIP_REQUEST_PATH=false
AUTHENTICATE_API_PER_MIN_RATE_LIMIT=30 #times per minute.  See https://getkong.org/plugins/rate-limiting/


# API used to sign up a new user to the system and to reset a password. -- this API will use OAUTH2 also,
# but will *only* authenticate the client application before allowing access to the /signup endpoint. This
# is a different OAUTH2 grant mechanism the OAUTH2 CLIENT CREDENTIALS GRANT, where no username/password is
# required, only a client_id and client_secret.

CLIENT_API_NAME=client-v1
CLIENT_API_UPSTREAM_URL=https://wiremock:8081/
CLIENT_API_REQUEST_PATH=/client/v1
CLIENT_API_STRIP_REQUEST_PATH=false

# The version of the API that is being called by the client app, and which is being
# served by the services. Note that the internal service abstraction layer will be able
# to map major version number calls to the appropriate internal (back-end) services

# Added a second version to model the upgraded consumer API.

API_VERSION=v1
UPGRADED_API_VERSION=v2

# used to say whether Kong will send the X-Correlation-ID header back to the client.
CORRELATION_ID_ECHO_DOWNSTREAM=true

#IMPORTANT -- the below must agree with those set up in wiremock
#See the wiremock mountpoint at wiremock:/mappings/user_authenticate_*.json
AUTH_USERNAME=brad
AUTH_PASSWORD=xQ845c


#OAUTH Specifics
#OAUTH_TOKEN_EXPIRATION=7200 # in seconds = 2hrs
# reduced for testing purposes
OAUTH_TOKEN_EXPIRATION=180 # seconds -- default is 2 hours.

#CONSUMER CONFIGURATION
#Set up consumer name prefixes in an array
CONSUMER_PREFIXES=(MOB MER MA BID)

#Example Mobile consumer details
MOB_CONSUMER_NAME=RBS
MOB_CONSUMER_CUSTOM_ID=RBS_103485
MOB_CONSUMER_OAUTH_APP_NAME="RBS plc mobile app"
# ACLs for this consumer
MOB_CONSUMER_ACL_GROUPS=consumer_group

#Example Merchant consumer details
MER_CONSUMER_NAME=BootsPLC
MER_CONSUMER_CUSTOM_ID=BOOTS_012344
MER_CONSUMER_OAUTH_APP_NAME="Boots.com Mobile App"
# ACLs for this consumer
MER_CONSUMER_ACL_GROUPS=merchant_group

#Example Merchant Manager (Acquirer) consumer details
MA_CONSUMER_NAME=NETS
MA_CONSUMER_CUSTOM_ID=NETS_334444
MA_CONSUMER_OAUTH_APP_NAME="NETS"
# ACLs for this consumer
MA_CONSUMER_ACL_GROUPS=manager_group

#Internal consumer details
BID_CONSUMER_NAME=964Bidco
BID_CONSUMER_CUSTOM_ID=BIDCO_4354354
BID_CONSUMER_OAUTH_APP_NAME="964 Bidco Management App"
# ACLs for this consumer
# Bidco Consumer can access *all* APIs
BID_CONSUMER_ACL_GROUPS=admin_group

# Provision key file name -- used as a temp store for provision keys
PROVISION_KEY_FILE=./provision_keys
# Client credentials file -- used as a temp location for client app credentials
CLIENT_CREDENTIALS_FILE=./client_credentials

# ACLs for API access are based on white- or black-list groups.
# We will use white-lists
