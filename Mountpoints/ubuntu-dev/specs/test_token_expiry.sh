#!/bin/bash

# This script will call the consumer API (mobile API) and attempt to get an OAUTH token
# which it will then use to call the consumer API. It will then wait for the token to expire
# try again, fail, request a new token using the expiry token, then try again, and pass.

# load variable names
. api_config_variables

# load provision keys for each API
# the below file was generated by the script 'load_oauth2_plugins_and_obtain_provision_keys.sh'
. provision_keys

# load client_credentials
# the below file was generated by the script 'provision_consumer_app.sh'
. client_credentials

# We assume user (not client) authentication has already passed.
# Now we call Kong to get an authentication token.


echo Now calling the /oauth2/token endpoint of a specific API on Kong to get an oauth token
echo POST https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/oauth2/token
echo grant_type=password
echo client_id=$MOB_CLIENT_ID
echo client_secret=$MOB_CLIENT_SECRET
echo scope=${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION
echo provision_key=$consumer_KEY
echo authenticated_userid=$AUTH_USERNAME


ACCESS_TOKEN_RESPONSE=$( http --form --verify=no POST https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/oauth2/token \
	grant_type=password \
	client_id=$MOB_CLIENT_ID \
	client_secret=$MOB_CLIENT_SECRET \
	scope=${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION \
	provision_key=$consumer_KEY \
	authenticated_userid=$AUTH_USERNAME )

ACCESS_TOKEN=$(echo $ACCESS_TOKEN_RESPONSE | jq '.access_token' -r)
REFRESH_TOKEN=$(echo $ACCESS_TOKEN_RESPONSE | jq '.refresh_token' -r)
TOKEN_TYPE=$(echo $ACCESS_TOKEN_RESPONSE | jq '.token_type' -r)
EXPIRES_IN=$(echo $ACCESS_TOKEN_RESPONSE | jq '.expires_in' -r)

echo Got the following data from the request for a token
echo access_token: $ACCESS_TOKEN
echo refresh_token: $REFRESH_TOKEN
echo token_type: $TOKEN_TYPE
echo expires_in: $EXPIRES_IN
echo

# Now that we have a token, this response body should be sent back to the requester as a response to the
# first HTTP Request in this script file.

# the below call is from the perspective of the Client app (or SDK) on the assumption
# that this data was successfully sent back to the client.
echo Now calling the API with the token just received.
http --verify=no --print HBhb GET https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION/hello.json \
	Authorization:"Bearer $ACCESS_TOKEN" \

#now we wait for the expiry period to pass and try again.
echo Sleeping for $(($EXPIRES_IN +1 )) seconds...
echo ...
sleep $(($EXPIRES_IN +1 ))

echo Now calling the API with the token $EXPIRES_IN seconds ago. This should fail.
http --verify=no --print HBhb GET https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION/hello.json \
	Authorization:"Bearer $ACCESS_TOKEN" \

# The below call is to be made by the Authentication service when a client call comes in to it at:
# POST https://kong:8443/authenticate/$API_VERSION/refresh

echo
echo
echo Now calling the /oauth2/token endpoint of a specific API on Kong to get an oauth token
echo POST https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/oauth2/token
echo grant_type=refresh_token
echo refresh_token=$REFRESH_TOKEN
echo client_id=$MOB_CLIENT_ID
echo client_secret=$MOB_CLIENT_SECRET
echo

REFRESH_TOKEN_RESPONSE=$(http --form --verify=no POST https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/oauth2/token \
	grant_type=refresh_token \
	refresh_token=$REFRESH_TOKEN \
	client_id=$MOB_CLIENT_ID \
	scope=${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION \
	client_secret=$MOB_CLIENT_SECRET )


ACCESS_TOKEN=$(echo $REFRESH_TOKEN_RESPONSE | jq '.access_token' -r)
REFRESH_TOKEN=$(echo $REFRESH_TOKEN_RESPONSE | jq '.refresh_token' -r)
TOKEN_TYPE=$(echo $REFRESH_TOKEN_RESPONSE | jq '.token_type' -r)
EXPIRES_IN=$(echo $REFRESH_TOKEN_RESPONSE | jq '.expires_in' -r)

echo Got a FRESH set of token info...
echo access_token: $ACCESS_TOKEN
echo refresh_token: $REFRESH_TOKEN
echo token_type: $TOKEN_TYPE
echo expires_in: $EXPIRES_IN
echo scope=${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION


echo Now calling the API with the new access_token just received.
http --verify=no --print HBhb GET https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION/hello.json \
	Authorization:"Bearer $ACCESS_TOKEN" \

#now we wait for the expiry period to pass and try again.
echo Sleeping for $(($EXPIRES_IN +1 )) seconds...
echo ...
sleep $(($EXPIRES_IN +1 ))

echo Now calling the API with the token $EXPIRES_IN seconds ago. This should fail.
http --verify=no --print HBhb GET https://kong:8443${SECURE_API_REQUEST_PATHS[0]}/$API_VERSION/hello.json \
	Authorization:"Bearer $ACCESS_TOKEN" \
